{"version":3,"sources":["UseForm.js","validateInfo.js","usePasswordToggle.js","FormSignUp.js","FormSuccess.js","Form.js","App.js","index.js"],"names":["UseForm","callback","validate","useState","email","password","values","setValues","errors","setErrors","isSubmitting","setIsSubmitting","useEffect","Object","keys","length","handleChange","e","target","name","value","handleSubmit","preventDefault","validateInfo","test","usePasswordToggle","visible","setVisiblity","icon","onClick","visiblity","FormSignUp","submitForm","PassInputType","ToggleIcon","Icon1","Icon","tickmark","className","onSubmit","htmlFor","id","type","placeholder","onChange","href","FormSuccess","Form","isSubmitted","setIsSubmitted","App","library","add","faUser","faEnvelope","faLock","faEye","faEyeSlash","faCheck","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iRAsCeA,EApCC,SAACC,EAASC,GAAc,IAAD,EACPC,mBAAS,CACjCC,MAAM,GACNC,SAAS,KAHsB,mBAC5BC,EAD4B,KACpBC,EADoB,OAMTJ,mBAAS,IANA,mBAM7BK,EAN6B,KAMtBC,EANsB,OAOGN,oBAAS,GAPZ,mBAO7BO,EAP6B,KAOhBC,EAPgB,KAiCnC,OANAC,qBAAU,WAC6B,IAA/BC,OAAOC,KAAKN,GAAQO,QAAgBL,GACpCT,MAEN,CAACO,IAEI,CAACQ,aAxBa,SAAAC,GAAK,IAAD,EACCA,EAAEC,OAAjBC,EADc,EACdA,KAAMC,EADQ,EACRA,MACbb,EAAU,2BACHD,GADE,kBAEAa,EAAOC,MAoBCd,SAAOe,aAbP,SAAAJ,GACjBA,EAAEK,iBAEFb,EAAUP,EAASI,IACnBK,GAAgB,IASqBH,WCnC9B,SAASe,EAAajB,GACjC,IAAIE,EAAS,GAiBX,OAfGF,EAAOF,MAEE,eAAeoB,KAAKlB,EAAOF,SACrCI,EAAOJ,MAAQ,4BAFfI,EAAOJ,MAAQ,iBAIZE,EAAOD,SAEDC,EAAOD,SAASU,OAAS,IAClCP,EAAOH,SAAW,6CAFlBG,EAAOH,SAAW,uBASbG,E,kBCDEiB,EAdW,WAAO,IAAD,EACItB,oBAAS,GADb,mBACrBuB,EADqB,KACZC,EADY,KAU5B,MAAO,CAFWD,EAAU,OAAS,WAJjC,cAAC,IAAD,CAAiBE,KAAQF,EAAU,YAAc,MACjDG,QAAW,kBAAMF,GAAc,SAAAG,GAAS,OAAKA,UCwEtCC,G,MAxEI,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAAiB,EAIAP,IAJA,mBAI5BQ,EAJ4B,KAIdC,EAJc,OAMelC,EAAQgC,EAAW9B,GAA9Dc,EAN4B,EAM5BA,aAAaV,EANe,EAMfA,OAAOe,EANQ,EAMRA,aAAab,EANL,EAMKA,OASxC,IAAM2B,EAPN,SAAkB7B,GAChB,IAAM8B,EAAQ,cAAC,IAAD,CAAiBR,KAAO,UACtC,GAAI,eAAeJ,KAAKlB,EAAOF,OAC7B,OAAOgC,EAIGC,CAAS/B,GAEvB,OACG,qBAAKgC,UAAU,qBAAf,SACI,uBAAMA,UAAU,OAAOC,SAAUlB,EAAjC,UACI,gDACA,sBAAKiB,UAAU,cAAf,UACI,uBAAOE,QAAQ,QAAQF,UAAU,aAAjC,SACI,8CAEJ,uBACIG,GAAK,QACLC,KAAK,QACLvB,KAAO,QACPmB,UAAU,aACVK,YAAY,mBACZvB,MAASd,EAAOF,MAChBwC,SAAU5B,IAEV,sBAAMsB,UAAU,oBAAhB,SACKH,IAEP3B,EAAOJ,OAAS,4BAAII,EAAOJ,WAEjC,sBAAKkC,UAAU,cAAf,UACI,uBAAOE,QAAQ,WAAWF,UAAU,aAApC,SACI,4CAEJ,uBACIG,GAAK,WACLC,KAAQT,EACRd,KAAO,WACPmB,UAAU,aACVK,YAAY,sBACZvB,MAASd,EAAOD,SAChBuC,SAAU5B,IAEV,sBAAMsB,UAAU,uBAAhB,SACKJ,IAEP1B,EAAOH,UAAY,4BAAIG,EAAOH,cAMpC,wBAAQiC,UAAU,iBAAiBI,KAAK,SAAxC,4BAGA,uBAAMJ,UAAU,mBAAhB,sCAC6B,mBAAGO,KAAK,IAAR,8BC7D7BC,EAVK,WAChB,OACI,qBAAKR,UAAU,qBAAf,SACI,qBAAKA,UAAU,eAAf,sDCoBGS,G,MApBF,WAAO,IAAD,EACuB5C,oBAAS,GADhC,mBACR6C,EADQ,KACKC,EADL,KASf,OACI,mCACA,qBAAKX,UAAU,iBAAf,SAEQU,EAA6D,cAAC,EAAD,IAA7C,cAAC,EAAD,CAAYhB,WAVxC,WAEIiB,GAAe,YCERC,MARf,WACE,OACE,qBAAKZ,UAAU,MAAf,SACE,cAAC,EAAD,O,cCONa,IAAQC,IAAIC,IACVC,IACAC,IACAC,IACAC,IACAC,KAEFC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.0825226d.chunk.js","sourcesContent":["import {useState,useEffect} from 'react';\r\n\r\nconst UseForm = (callback,validate) => {\r\n    const [values, setValues] = useState({\r\n        email:'',\r\n        password:'',\r\n        // Tnc : false\r\n    });\r\n    const[errors,setErrors] = useState({});\r\n    const[isSubmitting,setIsSubmitting] = useState(false);\r\n\r\n    const handleChange = e =>{\r\n        const {name, value} = e.target;\r\n        setValues({\r\n            ...values,\r\n                [name]: value\r\n            \r\n        })\r\n\r\n        // setValues(e.target.checked)\r\n    };\r\n\r\n    const handleSubmit = e =>{\r\n        e.preventDefault();\r\n\r\n        setErrors(validate(values));\r\n        setIsSubmitting(true);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (Object.keys(errors).length === 0 && isSubmitting) {\r\n            callback();\r\n          }\r\n    },[errors]);\r\n\r\n    return {handleChange,values,handleSubmit,errors};\r\n};\r\n\r\nexport default UseForm;\r\n","export default function validateInfo(values){\r\n    let errors = {};\r\n    \r\n    if (!values.email) {\r\n        errors.email = 'Email required';\r\n      } else if (!/\\S+@\\S+\\.\\S+/.test(values.email)) {\r\n        errors.email = 'Email address is invalid';\r\n      }\r\n      if (!values.password) {\r\n        errors.password = 'Password is required';\r\n      } else if (values.password.length < 8) {\r\n        errors.password = 'Password needs to be 8 characters or more';\r\n      }\r\n\r\n      // if(!values.Tnc){\r\n      //   errors.Tnc = 'mark the tick first';\r\n      // }\r\n      \r\n      return errors;\r\n}","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, {useState} from 'react'\r\n\r\nconst usePasswordToggle = () => {\r\n    const [visible, setVisiblity] = useState(false);\r\n\r\n    const Icon = (\r\n        <FontAwesomeIcon icon = {visible ? \"eye-slash\" : \"eye\" }\r\n        onClick = {() => setVisiblity (visiblity => !visiblity)} />\r\n    );\r\n\r\n    const InputType = visible ? \"text\" : \"password\";\r\n\r\n    return [InputType,Icon];\r\n    \r\n};\r\n\r\nexport default usePasswordToggle\r\n","import React from 'react';\r\nimport UseForm from './UseForm';\r\nimport validate from './validateInfo';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport usePasswordToggle from './usePasswordToggle';\r\nimport './Signup.css';\r\n\r\n\r\nconst FormSignUp = ({ submitForm }) => {\r\n\r\n    \r\n\r\n    const [PassInputType,ToggleIcon] = usePasswordToggle();\r\n\r\n    const {handleChange,values,handleSubmit,errors} = UseForm(submitForm,validate);\r\n\r\n    function tickmark(values){\r\n      const Icon =  <FontAwesomeIcon icon = \"check\" />;\r\n      if (/\\S+@\\S+\\.\\S+/.test(values.email)) {\r\n        return Icon;\r\n      }\r\n    }\r\n\r\n    const Icon1 = tickmark(values);\r\n   \r\n    return (\r\n       <div className=\"form-content-right\">\r\n           <form className=\"form\" onSubmit={handleSubmit}>\r\n               <h1>Create Account</h1>\r\n               <div className=\"form-inputs\">\r\n                   <label htmlFor=\"email\" className=\"form-label\">\r\n                       <h4>Your Email</h4>\r\n                   </label>\r\n                   <input\r\n                       id = \"email\"  \r\n                       type=\"email\"\r\n                       name = \"email\"\r\n                       className=\"form-input\"\r\n                       placeholder=\"enter your email\"\r\n                       value = {values.email}\r\n                       onChange={handleChange}\r\n                       />\r\n                       <span className=\"email-toogle-icon\">\r\n                           {Icon1}\r\n                           </span>\r\n                    {errors.email && <p>{errors.email}</p>}   \r\n               </div>\r\n               <div className=\"form-inputs\">\r\n                   <label htmlFor=\"password\" className=\"form-label\">\r\n                       <h4>Password</h4>\r\n                   </label>\r\n                   <input\r\n                       id = \"password\"\r\n                       type = {PassInputType}\r\n                       name = \"password\"\r\n                       className=\"form-input\"\r\n                       placeholder=\"enter your password\"\r\n                       value = {values.password}\r\n                       onChange={handleChange}\r\n                       />\r\n                       <span className=\"password-toogle-icon\">\r\n                           {ToggleIcon}\r\n                           </span>  \r\n                    {errors.password && <p>{errors.password}</p>}    \r\n               </div>\r\n               {/* <div className=\"form-input-con\">\r\n                   <input type = \"checkbox\"/><span>I agree to the <a href=\"#\">Terms & Condition </a> and <a href=\"#\">Privacy Policy </a> </span>\r\n                   {errors.Tnc && <p>{errors.Tnc}</p> }\r\n               </div> */}\r\n               <button className=\"form-input-btn\" type=\"submit\" >\r\n                   Create account\r\n               </button>\r\n               <span className=\"form-input-login\">\r\n                   Already have an account? <a href=\"#\">Log in</a>\r\n               </span>\r\n           </form>\r\n       </div>\r\n    )\r\n}\r\n\r\nexport default FormSignUp\r\n","import React from 'react'\r\n\r\nconst FormSuccess = () => {\r\n    return (\r\n        <div className=\"form-content-right\">\r\n            <div className=\"form-success\">\r\n                  Your account is successfully created!\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FormSuccess\r\n","import React ,{useState} from 'react';\r\nimport FormSignUp from './FormSignUp';\r\nimport FormSuccess from './FormSuccess';\r\nimport './Form.css';\r\n\r\nconst Form = () => {\r\n    const [isSubmitted, setIsSubmitted] = useState(false);\r\n\r\n    function submitForm(){\r\n        // console.log(\"devro\");\r\n        setIsSubmitted(true);\r\n        \r\n    }\r\n    \r\n    return (\r\n        <>\r\n        <div className='form-container'>\r\n              \r\n              {!isSubmitted ?  (<FormSignUp submitForm = {submitForm} />) : (<FormSuccess/>)}\r\n              {/* <FormSuccess/> */}\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Form\r\n","import React from 'react'; \nimport './App.css';\nimport Form from './Form';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Form/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {library} from \"@fortawesome/fontawesome-svg-core\";\nimport {\n  faUser,\n  faEnvelope,\n  faLock,\n  faEye,\n  faEyeSlash,\n  faCheck\n} from \"@fortawesome/free-solid-svg-icons\";\n\nlibrary.add(faUser,\n  faEnvelope,\n  faLock,\n  faEye,\n  faEyeSlash,\n  faCheck)\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}